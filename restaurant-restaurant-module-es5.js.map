{"version":3,"sources":["./src/app/resolvers/session/session-admin.resolver.ts","./src/app/restaurant/restaurant.module.ts","./src/app/restaurant/restaurant.routing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACoD;AAC1C;AACf;AACiD;AAClD;AACF;AAGjC;IAEE,8BAAoB,YAAiC,EACjC,QAAwB,EACxB,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAqB;QACjC,aAAQ,GAAR,QAAQ,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAQ;IAClC,CAAC;IAED,sCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAAjE,iBAkBC;QAjBC,IAAM,OAAO,GAAkB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACrE,IAAI,mCAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,0CAAU,EAAE,CAAC,EAAE;YAC/D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACzC,OAAO;SACR;QAED,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE;YAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,+CAAE,CAAC,OAAO,CAAC,CAAC;SACpB;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;aACzB,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACjB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;;gBAvBiC,kEAAmB;gBACvB,oFAAc;gBAChB,sDAAM;;IAJvB,oBAAoB;QADhC,gEAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;+EAGG,kEAAmB;YACvB,oFAAc;YAChB,sDAAM;OAJvB,oBAAoB,CA0BhC;IAAD,2BAAC;CAAA;AA1BgC;;;;;;;;;;;;;;;;;;;;ACTM;AACM;AACU;AAUvD;IAAA;IACA,CAAC;IADY,gBAAgB;QAP5B,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACP,4DAAY;gBACZ,qEAAiB;aAClB;SACF,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;;;;;;;;;ACZU;AACc;AAC8B;AAGnF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,8CAA8C;QAC5D,OAAO,EAAE;YACP,OAAO,EAAE,kGAAoB;SAC9B;KACF;IACD,sDAAsD;IACtD,EAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,+BAA+B,EAAC;CAE9D,CAAC;AAMF;IAAA;IACA,CAAC;IADY,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAC7B;IAAD,wBAAC;CAAA;AAD6B","file":"restaurant-restaurant-module-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\nimport {LocalStorageService} from 'ngx-webstorage';\nimport {Observable, of} from 'rxjs';\nimport {LoginResponse, SessionService} from '@app/_services/session/session.service';\nimport {tap} from 'rxjs/operators';\nimport * as moment from 'moment';\n\n@Injectable({providedIn: 'root'})\nexport class SessionAdminResolver implements Resolve<any> {\n\n  constructor(private localStorage: LocalStorageService,\n              private sessionS: SessionService,\n              private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<LoginResponse> {\n    const session: LoginResponse = this.localStorage.retrieve('session');\n    if (moment(session.expirationTime).isSameOrBefore(moment.now())) {\n      this.router.navigateByUrl('/admin/auth');\n      return;\n    }\n\n    if (session && session.token && !!session.is_admin) {\n      this.sessionS.session$.next(session);\n      return of(session);\n    }\n\n    return this.sessionS.login()\n      .pipe(tap(res => {\n        if (!res.is_admin) {\n          this.router.navigateByUrl('/admin/auth');\n        }\n      }));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RestaurantRouting} from './restaurant.routing';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RestaurantRouting\n  ]\n})\nexport class RestaurantModule {\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SessionAdminResolver} from '@app/resolvers/session/session-admin.resolver';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './dashboard/dashboard.module#DashboardModule',\n    resolve: {\n      session: SessionAdminResolver\n    },\n  },\n  // {path: '', component: GanttTimelineChartComponent},\n  {path: 'auth', loadChildren: './auth/auth.module#AuthModule'},\n  // {path: 'plan', loadChildren: './restaurant-plan/restaurant-plan.module#RestaurantPlanModule'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RestaurantRouting {\n}\n"],"sourceRoot":"webpack:///"}